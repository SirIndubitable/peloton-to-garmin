###################
# CREATE FINAL LAYER
###################
FROM nginx:stable as final

ENV PYTHONUNBUFFERED=1
RUN apt-get update \
	&& apt-get -y install bash tzdata \
	&& apt-get purge -y -f --force-yes $EXT_BUILD_DEPS \
	&& apt-get autoremove -y \
	&& apt-get clean \
	&& rm -rf /var/lib/apt/lists/*

RUN groupadd -r p2g && useradd -r -g p2g p2g

WORKDIR /app

RUN mkdir -m770 {output,data,working}

###################
# BUILD LAYER
###################
FROM mcr.microsoft.com/dotnet/sdk:6.0 AS build

COPY . /build
WORKDIR /build

SHELL ["/bin/bash", "-c"]

ARG TARGETPLATFORM
ARG VERSION

RUN echo $TARGETPLATFORM \
	&& echo $VERSION
ENV VERSION=${VERSION}

###################
# BUILD WEB APP
###################
RUN if [[ "$TARGETPLATFORM" = "linux/arm64" ]] ; then \
		dotnet publish /build/src/WebUI/WebUI.csproj -c Release -r linux-arm64 -o /build/published --version-suffix $VERSION ; \
	else \
		dotnet publish /build/src/WebUI/WebUI.csproj -c Release -r linux-x64 -o /build/published --version-suffix $VERSION ; \
 	fi

###################
# FINAL
###################
FROM final

COPY --from=build /build/published /usr/share/nginx/html
COPY --from=build /build/LICENSE ./LICENSE
COPY --from=build /build/configuration.example.json ./configuration.local.json

COPY --chmod=770 ./docker/entrypoint.sh .